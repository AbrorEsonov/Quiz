{"version":3,"sources":["components/Start.js","components/Question.js","App.js","utils/index.js","components/End.js","components/Modal.js","reportWebVitals.js","index.js"],"names":["Start","onQuizStart","username","setUserName","className","type","name","value","required","onChange","e","target","onClick","preventDefault","style","color","Question","interval","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","useState","selected","setSelected","error","setError","radiosWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","changeHandler","question","ref","choices","map","choice","i","backgroundColor","id","for","prevState","q","a","formatTime","time","Math","floor","End","results","onReset","onAnswersCheck","correctAnswers","setCorrectAnswers","correct","forEach","result","index","answer","length","ModalPage","onClose","App","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","setTime","selectedArr","setSelectedArr","clearInterval","shuffled","quizData","sort","random","slice","setInterval","prevTime","Modal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75da86f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nfunction Start({ onQuizStart, username, setUserName }) {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-body\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={username}\r\n            required=\"required\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n            className=\"btn btn-primary ml-2\"\r\n          />\r\n        </form>\r\n        {username !== \"\" ? (\r\n          <div>\r\n            <h1 className=\"card-title\">Start the quiz</h1>\r\n            <p className=\"card-text\">Good luck!</p>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={onQuizStart}>\r\n              Start\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <p style={{ color: \"red\" }}>Please enter your name</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Question({\r\n  data,\r\n  onAnswerUpdate,\r\n  numberOfQuestions,\r\n  activeQuestion,\r\n  onSetActiveQuestion,\r\n  onSetStep,\r\n}) {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const radiosWrapper = useRef();\r\n\r\n  useEffect(() => {\r\n    const findCheckedInput = radiosWrapper.current.querySelector(\r\n      \"input:checked\"\r\n    );\r\n    if (findCheckedInput) {\r\n      findCheckedInput.checked = false;\r\n    }\r\n  }, [data]);\r\n\r\n  const changeHandler = (e) => {\r\n    setSelected(e.target.value);\r\n    if (error) {\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const nextClickHandler = (e) => {\r\n    if (selected === \"\") {\r\n      return setError(\"Please select one option!\");\r\n    }\r\n    onAnswerUpdate((prevState) => [\r\n      ...prevState,\r\n      { q: data.question, a: selected },\r\n    ]);\r\n    setSelected(\"\");\r\n    if (activeQuestion < numberOfQuestions - 1) {\r\n      onSetActiveQuestion(activeQuestion + 1);\r\n    } else {\r\n      onSetStep(3);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title mb-5\">{data.question}</h2>\r\n        <div\r\n          className=\"form-check d-flex flex-column justify-content-around\"\r\n          ref={radiosWrapper}\r\n        >\r\n          {data.choices.map((choice, i) => (\r\n            <div key={i} style={{backgroundColor: \"#f5f5f5\"}} className=\"mb-2 p-3\" >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"answer\"\r\n                id={i}\r\n                value={choice}\r\n                onChange={changeHandler}\r\n              />\r\n              <label className=\"form-check-label\"  for={i}>\r\n                {choice}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {error && <div className=\"text-danger\">{error}</div>}\r\n        <button\r\n          className=\"btn btn-lg btn-primary w-100 mt-4\"\r\n          onClick={nextClickHandler}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Start from \"./components/Start\";\nimport Question from \"./components/Question\";\nimport End from \"./components/End\";\nimport ModalPage from \"./components/Modal\";\nimport quizData from \"./data/quiz.json\";\nlet interval;\nfunction App() {\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [time, setTime] = useState(0);\n  const [selectedArr, setSelectedArr] = useState([])\n  const [username, setUserName] = useState(\"\")\n\n  useEffect(() => {\n    if (step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n\n  useEffect(() => {\n   let shuffled = quizData.data.sort(function(){return .5 - Math.random()})\n     setSelectedArr(shuffled.slice(0,5)) \n  }, [])\n  // console.log(selectedArr);\n\n\n  const quizStartHandler = () => {\n    setStep(2);\n    interval = setInterval(() => {\n      setTime((prevTime) => prevTime + 1);\n    }, 1000);\n  };\n  const resetClickHandler = () => {\n    setSelectedArr(quizData.data.sort(function(){return .5 - Math.random()}).slice(0,5));\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    setTime(0);\n    setShowModal(false);\n    interval = setInterval(() => {\n      setTime((prevTime) => prevTime + 1);\n    }, 1000);\n  };\n  return (\n    <div className=\"App\">\n      {step === 1 && <Start onQuizStart={quizStartHandler} username={username} setUserName={setUserName} />}\n      {step === 2 && (\n        <Question\n          data={selectedArr[activeQuestion]}\n          onAnswerUpdate={setAnswers}\n          numberOfQuestions={selectedArr.length}\n          activeQuestion={activeQuestion}\n          onSetActiveQuestion={setActiveQuestion}\n          onSetStep={setStep}\n          \n        />\n      )}\n      {step === 3 && (\n        <End\n          results={answers}\n          data={selectedArr}\n          onReset={resetClickHandler}\n          onAnswersCheck={() => setShowModal(true)}\n          time={time}\n          username={username}\n        />\n      )}\n\n      {showModal && (\n        <ModalPage\n          onClose={() => setShowModal(false)}\n          results={answers}\n          data={selectedArr}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const formatTime = time => {\r\n    if(time < 60) {\r\n      return time < 10 ? `0${time}s` : `${time}s`;\r\n    }else {\r\n      return Math.floor(time / 60) + 'm'  + (time % 60) + 's';\r\n    }\r\n  }\r\n  \r\n  export {\r\n    formatTime\r\n  }","import React, { useEffect, useState } from 'react';\r\n\r\nimport { formatTime } from '../utils';\r\n\r\nconst End = ({ results, data, onReset, onAnswersCheck, time, username }) => {\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let correct = 0;\r\n    results.forEach((result, index) => {\r\n      if(result.a === data[index].answer) {\r\n        correct++;\r\n      }\r\n    });\r\n    setCorrectAnswers(correct);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n          <h3 className=\"card-title\">{username}, Your results</h3>\r\n          <p className=\"card-text\">{correctAnswers} of {data.length}</p>\r\n          <p className=\"card-text\"><strong>{Math.floor((correctAnswers / data.length) * 100)}%</strong></p>\r\n          <p className=\"card-text\"><strong>Your time:</strong> {formatTime(time)}</p>\r\n          <button className=\"btn btn-primary w-50 mr-2\" onClick={onAnswersCheck}>Check your answers</button>\r\n          <button className=\"btn btn-success w-25\" onClick={onReset}>Try again</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default End;","import React from 'react';\r\nconst ModalPage = ({ onClose, results, data }) => {\r\n \r\n  return(\r\n<div className=\"d-block\">\r\n<ul>\r\n  {results.map((result, i) => (\r\n    <li key={i} className=\"mb-6\">\r\n      <p><strong>{result.q}</strong></p>\r\n      <p className={result.a === data[i].answer ? 'bg-success text-white p-2' : 'bg-danger text-white p-2'}>Your answer: {result.a}</p>\r\n      {result.a !== data[i].answer && <p className=\"bg-primary text-white p-2\">Correct answer: {data[i].answer}</p>}\r\n    </li>\r\n  ))}\r\n</ul>\r\n<button className=\"btn btn-secondary w-75 ml-5 text-center mb-3\" onClick={onClose}>Close</button>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default ModalPage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}