{"version":3,"sources":["components/Start.js","components/Question.js","App.js","utils/index.js","components/End.js","components/Modal.js","reportWebVitals.js","index.js"],"names":["Start","onQuizStart","className","onClick","Question","interval","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","useState","selected","setSelected","error","setError","radiosWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","changeHandler","e","target","value","question","ref","choices","map","choice","i","style","backgroundColor","type","name","id","onChange","for","prevState","q","a","formatTime","time","Math","floor","End","results","onReset","onAnswersCheck","correctAnswers","setCorrectAnswers","correct","forEach","result","index","answer","length","ModalPage","onClose","App","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","setTime","clearInterval","setInterval","prevTime","quizData","Modal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9fa809e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\"\r\nfunction Start({ onQuizStart }) {\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-body\">\r\n          <h1 className=\"card-title\">Start the quiz</h1>\r\n          <p className=\"card-text\">Good luck!</p>\r\n          <button className=\"btn btn-primary btn-lg\" onClick={onQuizStart}>\r\n             Start\r\n          </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Question({\r\n  data,\r\n  onAnswerUpdate,\r\n  numberOfQuestions,\r\n  activeQuestion,\r\n  onSetActiveQuestion,\r\n  onSetStep,\r\n}) {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const radiosWrapper = useRef();\r\n\r\n  useEffect(() => {\r\n    const findCheckedInput = radiosWrapper.current.querySelector(\r\n      \"input:checked\"\r\n    );\r\n    if (findCheckedInput) {\r\n      findCheckedInput.checked = false;\r\n    }\r\n  }, [data]);\r\n\r\n  const changeHandler = (e) => {\r\n    setSelected(e.target.value);\r\n    if (error) {\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const nextClickHandler = (e) => {\r\n    if (selected === \"\") {\r\n      return setError(\"Please select one option!\");\r\n    }\r\n    onAnswerUpdate((prevState) => [\r\n      ...prevState,\r\n      { q: data.question, a: selected },\r\n    ]);\r\n    setSelected(\"\");\r\n    if (activeQuestion < numberOfQuestions - 1) {\r\n      onSetActiveQuestion(activeQuestion + 1);\r\n    } else {\r\n      onSetStep(3);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title mb-5\">{data.question}</h2>\r\n        <div\r\n          className=\"form-check d-flex flex-column justify-content-around\"\r\n          ref={radiosWrapper}\r\n        >\r\n          {data.choices.map((choice, i) => (\r\n            <div key={i} style={{backgroundColor: \"#f5f5f5\"}} className=\"mb-2 p-3\" >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"answer\"\r\n                id={i}\r\n                value={choice}\r\n                onChange={changeHandler}\r\n              />\r\n              <label className=\"form-check-label\"  for={i}>\r\n                {choice}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {error && <div className=\"text-danger\">{error}</div>}\r\n        <button\r\n          className=\"btn btn-lg btn-primary w-100 mt-4\"\r\n          onClick={nextClickHandler}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React, {useState, useEffect} from \"react\"\nimport \"./App.css\";\nimport Start from './components/Start';\nimport Question from './components/Question';\nimport End from './components/End';\nimport ModalPage from './components/Modal';\nimport quizData from './data/quiz.json';\nlet interval;\nfunction App() {\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    if(step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n\n  const quizStartHandler = () => {\n    setStep(2);\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1);\n    }, 1000);\n  }\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    setTime(0);\n    setShowModal(false)\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1);\n    }, 1000);\n  }\n  return (\n    <div className=\"App\">\n       {step === 1 && <Start onQuizStart={quizStartHandler} />}\n      {step === 2 && <Question \n        data={quizData.data[activeQuestion]}\n        onAnswerUpdate={setAnswers}\n        numberOfQuestions={quizData.data.length}\n        activeQuestion={activeQuestion}\n        onSetActiveQuestion={setActiveQuestion}\n        onSetStep={setStep}\n      />}\n      {step === 3 && <End \n        results={answers}\n        data={quizData.data}\n        onReset={resetClickHandler}\n        onAnswersCheck={() => setShowModal(true)}\n        time={time}\n      />}\n\n   {showModal && <ModalPage \n        onClose={() => setShowModal(false)}\n        results={answers}\n        data={quizData.data}\n      />}  \n    </div>\n  );\n}\n\nexport default App;\n","const formatTime = time => {\r\n    if(time < 60) {\r\n      return time < 10 ? `0${time}s` : `${time}s`;\r\n    }else {\r\n      return Math.floor(time / 60) + 'm'  + (time % 60) + 's';\r\n    }\r\n  }\r\n  \r\n  export {\r\n    formatTime\r\n  }","import React, { useEffect, useState } from 'react';\r\n\r\nimport { formatTime } from '../utils';\r\n\r\nconst End = ({ results, data, onReset, onAnswersCheck, time }) => {\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let correct = 0;\r\n    results.forEach((result, index) => {\r\n      if(result.a === data[index].answer) {\r\n        correct++;\r\n      }\r\n    });\r\n    setCorrectAnswers(correct);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n          <h3 className=\"card-title\">Your results</h3>\r\n          <p className=\"card-text\">{correctAnswers} of {data.length}</p>\r\n          <p className=\"card-text\"><strong>{Math.floor((correctAnswers / data.length) * 100)}%</strong></p>\r\n          <p className=\"card-text\"><strong>Your time:</strong> {formatTime(time)}</p>\r\n          <button className=\"btn btn-primary w-50 mr-2\" onClick={onAnswersCheck}>Check your answers</button>\r\n          <button className=\"btn btn-success w-25\" onClick={onReset}>Try again</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default End;","import React from 'react';\r\nconst ModalPage = ({ onClose, results, data }) => {\r\n \r\n  return(\r\n<div className=\"d-block\">\r\n<ul>\r\n  {results.map((result, i) => (\r\n    <li key={i} className=\"mb-6\">\r\n      <p><strong>{result.q}</strong></p>\r\n      <p className={result.a === data[i].answer ? 'bg-success text-white p-2' : 'bg-danger text-white p-2'}>Your answer: {result.a}</p>\r\n      {result.a !== data[i].answer && <p className=\"bg-primary text-white p-2\">Correct answer: {data[i].answer}</p>}\r\n    </li>\r\n  ))}\r\n</ul>\r\n<button className=\"btn btn-secondary w-75 ml-5 text-center mb-3\" onClick={onClose}>Close</button>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default ModalPage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}